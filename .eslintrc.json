{
	"root": true,
	"extends": [
		"standard",
		"plugin:react/recommended",
		"plugin:react-hooks/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"eslint:recommended",
		"prettier"
	],
	"plugins": [
		"import",
		"react-hooks",
		"prettier",
		"standard",
		"react",
		"@typescript-eslint",
		"jsx-a11y"
	],
	"globals": {
		"React": true,
		"JSX": true,
		"localStorage": true
	},
	"rules": {
		"jsx-a11y/alt-text": [
			2,
			{
				"elements": ["img", "object", "area", "input[type=\"image\"]"],
				"img": ["Image"],
				"object": ["Object"],
				"area": ["Area"],
				"input[type=\"image\"]": ["InputImage"]
			}
		],
		"react/jsx-boolean-value": ["error", "never"],
		"object-shorthand": ["error", "always"],
		"quotes": ["error", "single"],
		"jsx-quotes": ["error", "prefer-single"],
		"react/jsx-curly-brace-presence": [
			"error",
			{
				"props": "never",
				"children": "never"
			}
		],
		"@typescript-eslint/prefer-optional-chain": 2,
		"semi": [2, "never"],
		"curly": [2, "all"],
		"brace-style": ["error", "1tbs", { "allowSingleLine": false }],
		"indent": ["error", 2, { "SwitchCase": 1 }],
		"space-infix-ops": ["error", { "int32Hint": false }],
		"no-multi-spaces": ["error"],
		"space-before-function-paren": ["error", "always"],
		"space-before-blocks": ["error", "always"],
		"keyword-spacing": [
			"error",
			{
				"before": true,
				"after": true
			}
		],
		"object-curly-spacing": [1, "always"],
		"no-implicit-coercion": 2,
		"no-nested-ternary": 2,
		"no-var": 2,
		"react/prop-types": 0,
		"react/display-name": 0,
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "off",
		"no-use-before-define": "off",
		"no-unused-vars": "off",
		"@typescript-eslint/no-unused-vars": ["error"],
		"@typescript-eslint/no-use-before-define": ["warn"],
		"@typescript-eslint/no-empty-interface": [
			"error",
			{
				"allowSingleExtends": true
			}
		],
		"@typescript-eslint/no-empty-function": 0,
		"@typescript-eslint/explicit-function-return-type": [
			"warn",
			{
				"allowExpressions": true
			}
		],
		"@typescript-eslint/type-annotation-spacing": "error",
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": ["class"],
				"format": ["PascalCase"]
			},
			{
				"selector": "interface",
				"format": ["PascalCase"],
				"custom": {
					"regex": "(^I[A-Z])|(^Window$)",
					"match": true
				}
			},
			{
				"selector": "typeAlias",
				"format": ["PascalCase"],
				"custom": {
					"regex": "^T[A-Z]",
					"match": true
				}
			},
			{
				"selector": ["enum"],
				"format": ["UPPER_CASE"]
			},
			{
				"selector": ["enum"],
				"modifiers": ["exported"],
				"format": ["UPPER_CASE"]
			},
			{
				"selector": ["variable"],
				"format": ["camelCase", "PascalCase", "UPPER_CASE", "snake_case"]
			},
			{
				"selector": ["variable"],
				"modifiers": ["exported", "const"],
				"types": ["boolean", "string", "number"],
				"format": ["UPPER_CASE"]
			},
			{
				"selector": "variable",
				"types": ["function"],
				"format": ["PascalCase", "camelCase"],
				"leadingUnderscore": "allow"
			},
			{
				"selector": "variable",
				"types": ["boolean"],
				"format": ["PascalCase"],
				"prefix": ["is", "are", "was", "should", "has", "can", "did", "will", "need"]
			}
		]
	},
	"overrides": [
		{
			"files": ["**/*.ts"],
			"rules": {
				"camelcase": ["off"]
			}
		}
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": ["./tsconfig.json"]
	},
	"settings": {
		"react": {
			"version": "^17.0.2"
		}
	}
}
